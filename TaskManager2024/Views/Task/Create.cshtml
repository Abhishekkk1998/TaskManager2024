@model TaskManager2024.Models.Task

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCompleted)
                    @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title text-center mb-0">Create Task</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Title, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "Enter task title" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Description, new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 3, placeholder = "Enter task description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group form-check mb-3">
                            @Html.CheckBoxFor(model => model.IsCompleted, new { @class = "form-check-input" })
                            @Html.LabelFor(model => model.IsCompleted, new { @class = "form-check-label" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Priority, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", placeholder = "Enter task priority (e.g., 1)" })
                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Create</button>
                    }
                </div>
                <div class="card-footer text-center">
                    <a href="@Url.Action("Index")" class="text-decoration-none">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
